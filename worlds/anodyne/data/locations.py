from typing import Dict, List, NamedTuple, Optional


class LocationData(NamedTuple):
    name: str
    region: str
    dungeon: Optional[str] = None


# There are three locations not associated with items (the two Street chests, which always give the vanilla item in
# addition to the check, and the extra Red Grotto tentacle, since there are four of them but only three levels of
# progression). This is good because there is one logical in-game item (the Windmill activation) that, here, is broken
# up into three items (the three statues). Putting this all together leaves exactly one location for filler.

ANODYNE_LOCATIONS: List[LocationData] = [
    LocationData("Street - Broom Chest", "street"),
    LocationData("Street - Key Chest", "street"),
    LocationData("Overworld - Near Gate Chest", "overworld left"),
    LocationData("Overworld - Health Cicada", "overworld card gate"),
    LocationData("Overworld - After Temple Chest", "overworld right"),
    LocationData("Temple of the Seeing One - Entrance Chest", "temple start", dungeon="Temple of the Seeing One"),
    LocationData("Temple of the Seeing One - Dark Room Chest", "temple start", dungeon="Temple of the Seeing One"),
    LocationData("Temple of the Seeing One - Rock-Surrounded Chest", "temple start",
                 dungeon="Temple of the Seeing One"),
    LocationData("Temple of the Seeing One - Shieldy Room Chest", "temple card 4", dungeon="Temple of the Seeing One"),
    LocationData("Temple of the Seeing One - Health Cicada", "temple boss", dungeon="Temple of the Seeing One"),
    LocationData("Temple of the Seeing One - Boss Chest", "temple boss", dungeon="Temple of the Seeing One"),
    LocationData("Temple of the Seeing One - Green Key", "temple boss", dungeon="Temple of the Seeing One"),
    LocationData("Temple of the Seeing One - After Statue Left Chest", "temple extra",
                 dungeon="Temple of the Seeing One"),
    LocationData("Temple of the Seeing One - After Statue Right Chest", "temple extra",
                 dungeon="Temple of the Seeing One"),
    LocationData("Young Town - Stab Reward Chest", "young town"),
    LocationData("Young Town - Health Cicada", "young town card gate"),
    LocationData("Apartment - 1F Exterior Chest", "apartment 1f start", dungeon="Apartment"),
    LocationData("Apartment - 1F Rat Maze Chest", "apartment 1f start", dungeon="Apartment"),
    LocationData("Apartment - 1F Ledge Chest", "apartment 1f couches", dungeon="Apartment"),
    LocationData("Apartment - 1F Couches Chest", "apartment 1f couches", dungeon="Apartment"),
    LocationData("Apartment - 2F Rat Maze Chest", "apartment 2f rat maze", dungeon="Apartment"),
    LocationData("Apartment - 3F Gauntlet Chest", "apartment 3f start", dungeon="Apartment"),
    LocationData("Apartment - Health Cicada", "apartment 3f boss", dungeon="Apartment"),
    LocationData("Apartment - Boss Chest", "apartment 3f boss", dungeon="Apartment"),
    LocationData("Fields - Cardboard Box", "fields top"),
    LocationData("Fields - Goldman's Cave Chest", "fields top"),
    LocationData("Fields - Shopkeeper Trade", "fields shopkeeper trade"),
    LocationData("Fields - Mitra Trade", "fields mitra trade"),
    LocationData("Fields - Island Chest", "fields lake"),
    LocationData("Fields - Gauntlet Chest", "fields lake"),
    LocationData("Windmill - Activation", "windmill"),
    LocationData("Windmill - Chest", "windmill"),
    LocationData("Deep Forest - Inlet Chest", "deep forest"),
    LocationData("Cliffs - Lower Chest", "cliffs right"),
    LocationData("Cliffs - Upper Chest", "cliffs right"),
    LocationData("Mountain Cavern - Extend Upgrade Chest", "mountain extend", dungeon="Mountain Cavern"),
    LocationData("Mountain Cavern - 1F Four Enemies Chest", "mountain 1f start", dungeon="Mountain Cavern"),
    LocationData("Mountain Cavern - 1F Frogs and Rotators Chest", "mountain 1f jump", dungeon="Mountain Cavern"),
    LocationData("Mountain Cavern - 1F Entrance Chest", "mountain 1f jump", dungeon="Mountain Cavern"),
    LocationData("Mountain Cavern - 1F Crowded Ledge Chest", "mountain 1f ledge", dungeon="Mountain Cavern"),
    LocationData("Mountain Cavern - 1F Frogs and Dog Chest", "mountain 1f jump", dungeon="Mountain Cavern"),
    LocationData("Mountain Cavern - 2F Roller Chest", "mountain 2f two keys", dungeon="Mountain Cavern"),
    LocationData("Mountain Cavern - Health Cicada", "mountain b1f boss", dungeon="Mountain Cavern"),
    LocationData("Mountain Cavern - Boss Chest", "mountain b1f boss", dungeon="Mountain Cavern"),
    LocationData("Mountain Cavern - Blue Key", "mountain b1f boss", dungeon="Mountain Cavern"),
    LocationData("Space - Left Chest", "space"),
    LocationData("Space - Right Chest", "space"),
    LocationData("Hotel - 4F Annoyers Chest", "hotel 4f start", dungeon="Hotel"),
    LocationData("Hotel - 4F Dust Blower Maze Chest", "hotel 4f elevator", dungeon="Hotel"),
    LocationData("Hotel - 3F Gasguy Chest", "hotel 3f start", dungeon="Hotel"),
    LocationData("Hotel - 3F Rotators Chest", "hotel 3f start", dungeon="Hotel"),
    LocationData("Hotel - 2F Dog Chest", "hotel 2f right", dungeon="Hotel"),
    LocationData("Hotel - 2F Crevice Right Chest", "hotel 2f right", dungeon="Hotel"),
    LocationData("Hotel - 2F Backrooms Chest", "hotel 2f left", dungeon="Hotel"),
    LocationData("Hotel - 2F Crevice Left Chest", "hotel 2f left", dungeon="Hotel"),
    LocationData("Hotel - 1F Burst Flowers Chest", "hotel 1f inner", dungeon="Hotel"),
    LocationData("Hotel - Health Cicada", "hotel 1f boss", dungeon="Hotel"),
    LocationData("Hotel - Boss Chest", "hotel 1f boss", dungeon="Hotel"),
    LocationData("Beach - Dock Chest", "beach start"),
    LocationData("Beach - Health Cicada", "beach card gate"),
    LocationData("Red Sea - Lonely Chest", "red sea"),
    LocationData("Red Grotto - Widen Upgrade Chest", "grotto widen", dungeon="Red Grotto"),
    LocationData("Red Grotto - Middle Cave Left Chest", "grotto middle", dungeon="Red Grotto"),
    LocationData("Red Grotto - Middle Cave Right Chest", "grotto middle", dungeon="Red Grotto"),
    LocationData("Red Grotto - Middle Cave Left Tentacle", "grotto middle", dungeon="Red Grotto"),
    LocationData("Red Grotto - Middle Cave Right Tentacle", "grotto middle", dungeon="Red Grotto"),
    LocationData("Red Grotto - Middle Cave Middle Chest", "grotto middle keyed", dungeon="Red Grotto"),
    LocationData("Red Grotto - Left Cave Rapids Chest", "grotto left", dungeon="Red Grotto"),
    LocationData("Red Grotto - Left Cave Sticky Chest", "grotto left", dungeon="Red Grotto"),
    LocationData("Red Grotto - Left Cave Tentacle", "grotto left keyed", dungeon="Red Grotto"),
    LocationData("Red Grotto - Right Cave Four Shooter Chest", "grotto right", dungeon="Red Grotto"),
    LocationData("Red Grotto - Right Cave Slasher Chest", "grotto right", dungeon="Red Grotto"),
    LocationData("Red Grotto - Right Cave Tentacle", "grotto right keyed", dungeon="Red Grotto"),
    LocationData("Red Grotto - Top Cave Slasher Chest", "grotto top", dungeon="Red Grotto"),
    LocationData("Red Grotto - Health Cicada", "grotto top", dungeon="Red Grotto"),
    LocationData("Red Grotto - Boss Chest", "grotto top", dungeon="Red Grotto"),
    LocationData("Red Grotto - Red Key", "grotto top", dungeon="Red Grotto"),
    LocationData("Labyrinth - Top Left Chest", "labyrinth chest"),
    LocationData("Labyrinth - Health Cicada", "labyrinth card gate"),
    LocationData("Circus - Arthur Chest", "circus start", dungeon="Circus"),
    LocationData("Circus - Clowns Chest", "circus start", dungeon="Circus"),
    LocationData("Circus - Rat Maze Chest", "circus start", dungeon="Circus"),
    LocationData("Circus - Javiera Chest", "circus next", dungeon="Circus"),
    LocationData("Circus - Burners Chest", "circus next", dungeon="Circus"),
    LocationData("Circus - Lion Chest", "circus third", dungeon="Circus"),
    LocationData("Circus - Double Clowns Chest", "circus double clowns", dungeon="Circus"),
    LocationData("Circus - Health Cicada", "circus fourth", dungeon="Circus"),
    LocationData("Circus - Boss Chest", "circus fourth", dungeon="Circus"),
    LocationData("Terminal - Broken Bridge Chest", "terminal start"),
    LocationData("GO - Swap Upgrade Chest", "go start"),
]

ANODYNE_LOCATIONS_BY_NAME: Dict[str, LocationData] = {location.name: location for location in ANODYNE_LOCATIONS}
